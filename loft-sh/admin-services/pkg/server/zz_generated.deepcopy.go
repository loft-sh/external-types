//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Code generated by main. DO NOT EDIT.

package server

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Analytics) DeepCopyInto(out *Analytics) {
	*out = *in
	if in.Requests != nil {
		in, out := &in.Requests, &out.Requests
		*out = make([]Request, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Analytics.
func (in *Analytics) DeepCopy() *Analytics {
	if in == nil {
		return nil
	}
	out := new(Analytics)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnnouncementStatus) DeepCopyInto(out *AnnouncementStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnnouncementStatus.
func (in *AnnouncementStatus) DeepCopy() *AnnouncementStatus {
	if in == nil {
		return nil
	}
	out := new(AnnouncementStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Button) DeepCopyInto(out *Button) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Button.
func (in *Button) DeepCopy() *Button {
	if in == nil {
		return nil
	}
	out := new(Button)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in Buttons) DeepCopyInto(out *Buttons) {
	{
		in := &in
		*out = make(Buttons, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Button)
				**out = **in
			}
		}
		return
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Buttons.
func (in Buttons) DeepCopy() Buttons {
	if in == nil {
		return nil
	}
	out := new(Buttons)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeatureSpec) DeepCopyInto(out *FeatureSpec) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeatureSpec.
func (in *FeatureSpec) DeepCopy() *FeatureSpec {
	if in == nil {
		return nil
	}
	out := new(FeatureSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeatureStatus) DeepCopyInto(out *FeatureStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeatureStatus.
func (in *FeatureStatus) DeepCopy() *FeatureStatus {
	if in == nil {
		return nil
	}
	out := new(FeatureStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LegacyLicense) DeepCopyInto(out *LegacyLicense) {
	*out = *in
	if in.Buttons != nil {
		in, out := &in.Buttons, &out.Buttons
		*out = make(Buttons, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Button)
				**out = **in
			}
		}
	}
	if in.Announcements != nil {
		in, out := &in.Announcements, &out.Announcements
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.BlockRequests != nil {
		in, out := &in.BlockRequests, &out.BlockRequests
		*out = new([]Request)
		if **in != nil {
			in, out := *in, *out
			*out = make([]Request, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
	if in.Limits != nil {
		in, out := &in.Limits, &out.Limits
		*out = make([]ResourceQuantity, len(*in))
		copy(*out, *in)
	}
	if in.Features != nil {
		in, out := &in.Features, &out.Features
		*out = make(map[string]bool, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Analytics != nil {
		in, out := &in.Analytics, &out.Analytics
		*out = new(Analytics)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LegacyLicense.
func (in *LegacyLicense) DeepCopy() *LegacyLicense {
	if in == nil {
		return nil
	}
	out := new(LegacyLicense)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *License) DeepCopyInto(out *License) {
	*out = *in
	if in.Buttons != nil {
		in, out := &in.Buttons, &out.Buttons
		*out = make(Buttons, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Button)
				**out = **in
			}
		}
	}
	if in.Announcements != nil {
		in, out := &in.Announcements, &out.Announcements
		*out = make([]AnnouncementStatus, len(*in))
		copy(*out, *in)
	}
	if in.BlockRequests != nil {
		in, out := &in.BlockRequests, &out.BlockRequests
		*out = new([]Request)
		if **in != nil {
			in, out := *in, *out
			*out = make([]Request, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
	if in.Limits != nil {
		in, out := &in.Limits, &out.Limits
		*out = make([]ResourceQuantity, len(*in))
		copy(*out, *in)
	}
	if in.Features != nil {
		in, out := &in.Features, &out.Features
		*out = make([]LicenseFeature, len(*in))
		copy(*out, *in)
	}
	if in.Analytics != nil {
		in, out := &in.Analytics, &out.Analytics
		*out = new(Analytics)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new License.
func (in *License) DeepCopy() *License {
	if in == nil {
		return nil
	}
	out := new(License)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LicenseFeature) DeepCopyInto(out *LicenseFeature) {
	*out = *in
	out.FeatureSpec = in.FeatureSpec
	out.FeatureStatus = in.FeatureStatus
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LicenseFeature.
func (in *LicenseFeature) DeepCopy() *LicenseFeature {
	if in == nil {
		return nil
	}
	out := new(LicenseFeature)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Request) DeepCopyInto(out *Request) {
	*out = *in
	if in.Verbs != nil {
		in, out := &in.Verbs, &out.Verbs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Request.
func (in *Request) DeepCopy() *Request {
	if in == nil {
		return nil
	}
	out := new(Request)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceQuantity) DeepCopyInto(out *ResourceQuantity) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceQuantity.
func (in *ResourceQuantity) DeepCopy() *ResourceQuantity {
	if in == nil {
		return nil
	}
	out := new(ResourceQuantity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StandardRequestInput) DeepCopyInto(out *StandardRequestInput) {
	*out = *in
	if in.InstanceTokenAuth != nil {
		in, out := &in.InstanceTokenAuth, &out.InstanceTokenAuth
		*out = new(InstanceTokenAuth)
		**out = **in
	}
	out.StandardRequestInputFrontEnd = in.StandardRequestInputFrontEnd
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StandardRequestInput.
func (in *StandardRequestInput) DeepCopy() *StandardRequestInput {
	if in == nil {
		return nil
	}
	out := new(StandardRequestInput)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StandardRequestInputFrontEnd) DeepCopyInto(out *StandardRequestInputFrontEnd) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StandardRequestInputFrontEnd.
func (in *StandardRequestInputFrontEnd) DeepCopy() *StandardRequestInputFrontEnd {
	if in == nil {
		return nil
	}
	out := new(StandardRequestInputFrontEnd)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StandardRequestOutput) DeepCopyInto(out *StandardRequestOutput) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StandardRequestOutput.
func (in *StandardRequestOutput) DeepCopy() *StandardRequestOutput {
	if in == nil {
		return nil
	}
	out := new(StandardRequestOutput)
	in.DeepCopyInto(out)
	return out
}
